import logging
from telegram import Update
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes
from config import BOT_TOKEN

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(format='%(asctime)s - %(levelname)s - %(message)s', level=logging.INFO)
logger = logging.getLogger(__name__)

# –¢–í–û–ô Telegram ID
ADMIN_USER_ID = 34331814  # –í–ª–∞–¥–µ–ª–µ—Ü –±–æ—Ç–∞

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–ö–æ–º–∞–Ω–¥–∞ /start"""
    await update.message.reply_text(
        "ü§ñ –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç —Å –∞–¥–º–∏–Ω-—É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º.\n"
        "–û—Ç–ø—Ä–∞–≤—å /help –¥–ª—è —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥."
    )

async def my_id(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–ü–æ–∫–∞–∑–∞—Ç—å ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    user_id = update.effective_user.id
    await update.message.reply_text(f"–¢–≤–æ–π ID: {user_id}")

async def admin_help(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–ê–¥–º–∏–Ω-–∫–æ–º–∞–Ω–¥—ã (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∞)"""
    user_id = update.effective_user.id
    
    if user_id != ADMIN_USER_ID:
        await update.message.reply_text("‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω!")
        return
    
    admin_commands = """
üîß <b>–ê–î–ú–ò–ù –ö–û–ú–ê–ù–î–´:</b>

/admin_help - –≠—Ç–æ –º–µ–Ω—é
/add_feature [–∫–æ–¥] - –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏—é
/restart - –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞
/stats - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞
/broadcast [—Å–æ–æ–±—â–µ–Ω–∏–µ] - –†–∞—Å—Å—ã–ª–∫–∞ –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
/update_code [—Ñ–∞–π–ª] - –û–±–Ω–æ–≤–∏—Ç—å –∫–æ–¥ –±–æ—Ç–∞

üí° <b>–ü—Ä–∏–º–µ—Ä—ã:</b>
/add_feature weather - –¥–æ–±–∞–≤–∏—Ç—å –∫–æ–º–∞–Ω–¥—É –ø–æ–≥–æ–¥—ã
/broadcast –ü—Ä–∏–≤–µ—Ç –≤—Å–µ–º!
    """
    await update.message.reply_html(admin_commands)

async def add_feature(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏—é (—Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω)"""
    user_id = update.effective_user.id
    
    if user_id != ADMIN_USER_ID:
        await update.message.reply_text("‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω!")
        return
    
    if not context.args:
        await update.message.reply_text("‚ùå –£–∫–∞–∂–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏!\n–ü—Ä–∏–º–µ—Ä: /add_feature weather")
        return
    
    feature_name = " ".join(context.args)
    
    # –ó–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –¥–ª—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–≥–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–π
    await update.message.reply_text(
        f"‚úÖ –§—É–Ω–∫—Ü–∏—è '{feature_name}' –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –æ—á–µ—Ä–µ–¥—å —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏!\n"
        f"–°–∫–æ—Ä–æ —è –µ—ë —Ä–µ–∞–ª–∏–∑—É—é."
    )

async def admin_stats(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞ (—Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω)"""
    user_id = update.effective_user.id
    
    if user_id != ADMIN_USER_ID:
        await update.message.reply_text("‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω!")
        return
    
    # –ü—Ä–æ—Å—Ç–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    stats = f"""
üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞:</b>

üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {len(user_data)}
üîÑ –ó–∞–ø—Ä–æ—Å–æ–≤ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ: {total_requests}
‚è∞ –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: –∞–∫—Ç–∏–≤–µ–Ω
üíæ –°—Ç–∞—Ç—É—Å: —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–æ—Ä–º–∞–ª—å–Ω–æ
    """
    await update.message.reply_html(stats)

async def broadcast(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–†–∞—Å—Å—ã–ª–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π (—Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω)"""
    user_id = update.effective_user.id
    
    if user_id != ADMIN_USER_ID:
        await update.message.reply_text("‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω!")
        return
    
    if not context.args:
        await update.message.reply_text("‚ùå –£–∫–∞–∂–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏!\n–ü—Ä–∏–º–µ—Ä: /broadcast –ü—Ä–∏–≤–µ—Ç –≤—Å–µ–º!")
        return
    
    message = " ".join(context.args)
    sent_count = 0
    
    # –†–∞—Å—Å—ã–ª–∫–∞ –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
    for uid in user_data:
        try:
            await context.bot.send_message(chat_id=uid, text=f"üì¢ {message}")
            sent_count += 1
        except Exception as e:
            logger.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {uid}: {e}")
    
    await update.message.reply_text(f"‚úÖ –†–∞—Å—Å—ã–ª–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ {sent_count} —Å–æ–æ–±—â–µ–Ω–∏–π.")

# –ü—Ä–æ—Å—Ç–∞—è –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –≤ –ø–∞–º—è—Ç–∏
user_data = {}
total_requests = 0

async def echo(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–±—ã—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    global total_requests
    total_requests += 1
    
    user_id = update.effective_user.id
    user_data[user_id] = user_data.get(user_id, 0) + 1
    
    await update.message.reply_text(f"–ü–æ–ª—É—á–∏–ª: {update.message.text}")

def main() -> None:
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ —Å –∞–¥–º–∏–Ω-—Ñ—É–Ω–∫—Ü–∏—è–º–∏"""
    application = Application.builder().token(BOT_TOKEN).build()

    # –û–±—ã—á–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("help", start))
    application.add_handler(CommandHandler("my_id", my_id))

    # –ê–¥–º–∏–Ω –∫–æ–º–∞–Ω–¥—ã
    application.add_handler(CommandHandler("admin_help", admin_help))
    application.add_handler(CommandHandler("add_feature", add_feature))
    application.add_handler(CommandHandler("stats", admin_stats))
    application.add_handler(CommandHandler("broadcast", broadcast))

    # –¢–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, echo))

    print("üöÄ –ë–æ—Ç —Å –∞–¥–º–∏–Ω-—É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º –∑–∞–ø—É—â–µ–Ω!")
    application.run_polling(allowed_updates=Update.ALL_TYPES)

if __name__ == '__main__':
    main() 