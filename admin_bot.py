#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import logging
import asyncio
import os
from datetime import datetime
from telegram import Update
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes
import json
import aiohttp

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
BOT_TOKEN = os.getenv('BOT_TOKEN')
ADMIN_USER_ID = int(os.getenv('ADMIN_USER_ID', '0'))

if not BOT_TOKEN:
    logger.error("‚ùå BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è!")
    exit(1)

if ADMIN_USER_ID == 0:
    logger.warning("‚ö†Ô∏è ADMIN_USER_ID –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!")

# –í—Ä–µ–º—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞
bot_start_time = datetime.now()

# –§–∞–π–ª –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
USER_DATA_FILE = "user_data.json"

# –§–∞–π–ª –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ –±–æ—Ç–∞
BOT_SETTINGS_FILE = "bot_settings.json"

# –°–ª–æ–≤–∞—Ä—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–±—É–¥–µ—Ç –∑–∞–≥—Ä—É–∂–µ–Ω –∏–∑ —Ñ–∞–π–ª–∞)
user_data = {}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞ (—à–∞–±–ª–æ–Ω—ã —Å–æ–æ–±—â–µ–Ω–∏–π –∏ —Ç.–¥.)
bot_settings = {
    'message_template': 'üì¢ <b>–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:</b>\n\n{message}'
}

def save_user_data():
    """–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ —Ñ–∞–π–ª"""
    try:
        with open(USER_DATA_FILE, 'w', encoding='utf-8') as f:
            json.dump(user_data, f, ensure_ascii=False, indent=2)
        logger.info(f"üíæ –î–∞–Ω–Ω—ã–µ {len(user_data)} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ {USER_DATA_FILE}")
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {e}")

def load_user_data():
    """–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ —Ñ–∞–π–ª–∞"""
    global user_data
    try:
        if os.path.exists(USER_DATA_FILE):
            with open(USER_DATA_FILE, 'r', encoding='utf-8') as f:
                loaded_data = json.load(f)
                # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Å—Ç—Ä–æ–∫–æ–≤—ã–µ –∫–ª—é—á–∏ –æ–±—Ä–∞—Ç–Ω–æ –≤ int
                user_data = {int(user_id): user_info for user_id, user_info in loaded_data.items()}
                logger.info(f"üìÇ –ó–∞–≥—Ä—É–∂–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ {len(user_data)} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ {USER_DATA_FILE}")
        else:
            logger.info(f"üìÇ –§–∞–π–ª {USER_DATA_FILE} –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –±–∞–∑—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
            user_data = {}
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {e}")
        user_data = {}

def save_bot_settings():
    """–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –±–æ—Ç–∞ –≤ —Ñ–∞–π–ª"""
    try:
        with open(BOT_SETTINGS_FILE, 'w', encoding='utf-8') as f:
            json.dump(bot_settings, f, ensure_ascii=False, indent=2)
        logger.info(f"‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ {BOT_SETTINGS_FILE}")
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫: {e}")

def load_bot_settings():
    """–ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –±–æ—Ç–∞ –∏–∑ —Ñ–∞–π–ª–∞"""
    global bot_settings
    try:
        if os.path.exists(BOT_SETTINGS_FILE):
            with open(BOT_SETTINGS_FILE, 'r', encoding='utf-8') as f:
                loaded_settings = json.load(f)
                bot_settings.update(loaded_settings)
                logger.info(f"‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∏–∑ {BOT_SETTINGS_FILE}")
        else:
            logger.info(f"‚öôÔ∏è –§–∞–π–ª {BOT_SETTINGS_FILE} –Ω–µ –Ω–∞–π–¥–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é")
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
            save_bot_settings()
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫: {e}")
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        bot_settings = {
            'message_template': 'üì¢ <b>–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:</b>\n\n{message}'
        }

# –§—É–Ω–∫—Ü–∏–∏ –∫–æ–º–∞–Ω–¥

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–ö–æ–º–∞–Ω–¥–∞ /start"""
    user = update.effective_user
    user_id = user.id
    
    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if user_id not in user_data:
        user_data[user_id] = {
            'name': user.first_name,
            'username': user.username,
            'first_seen': datetime.now().isoformat(),
            'last_activity': datetime.now().isoformat()
        }
        logger.info(f"üë§ –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user.first_name} (ID: {user_id})")
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –Ω–æ–≤–æ–≥–æ
        save_user_data()
    else:
        # –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
        user_data[user_id]['last_activity'] = datetime.now().isoformat()
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        save_user_data()
    
    welcome_text = (
        f"üëã <b>–ü—Ä–∏–≤–µ—Ç, {user.first_name}!</b>\n\n"
        f"ü§ñ –≠—Ç–æ —á–∏—Å—Ç—ã–π Telegram –±–æ—Ç\n\n"
        f"üìã <b>–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>\n"
        f"/help - –°–ø—Ä–∞–≤–∫–∞\n"
        f"/ping - –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç—ã\n"
        f"/rates - –ö—É—Ä—Å—ã –≤–∞–ª—é—Ç –∏ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç\n"
        f"/stocks - –¢–æ–ø —Ä–æ—Å—Å–∏–π—Å–∫–∏—Ö –∞–∫—Ü–∏–π\n"
        f"/my_id - –£–∑–Ω–∞—Ç—å —Å–≤–æ–π ID\n"
    )
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∞–¥–º–∏–Ω—Å–∫–∏–µ –∫–æ–º–∞–Ω–¥—ã —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
    if user_id == ADMIN_USER_ID:
        welcome_text += f"/broadcast [—Ç–µ–∫—Å—Ç] - –†–∞—Å—Å—ã–ª–∫–∞ –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º\n"
        welcome_text += f"/send_message [ID] [—Ç–µ–∫—Å—Ç] - –õ–∏—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ\n"
        welcome_text += f"/fix_admin_id - –ò—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞\n"
        welcome_text += f"/users_info - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö\n"
        welcome_text += f"/add_user [ID] [–∏–º—è] - –î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n"
        welcome_text += f"/remove_user [ID] - –£–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n"
        welcome_text += f"/set_template [—à–∞–±–ª–æ–Ω] - –ù–∞—Å—Ç—Ä–æ–∏—Ç—å —à–∞–±–ª–æ–Ω\n"
        welcome_text += f"/get_template - –ü—Ä–æ—Å–º–æ—Ç—Ä —à–∞–±–ª–æ–Ω–∞\n"
    elif ADMIN_USER_ID == 0:
        # –ï—Å–ª–∏ ADMIN_USER_ID –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—É –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        welcome_text += f"/fix_admin_id - –°—Ç–∞—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º (–Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω)\n"
    
    welcome_text += "\n"
    
    if user_id == ADMIN_USER_ID:
        welcome_text += "üë®‚Äçüíª <b>–°—Ç–∞—Ç—É—Å:</b> –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä\n"
    else:
        welcome_text += "üë§ <b>–°—Ç–∞—Ç—É—Å:</b> –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å\n"
    
    welcome_text += f"üìä <b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:</b> {len(user_data)}"
    
    await update.message.reply_html(welcome_text)

async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–ö–æ–º–∞–Ω–¥–∞ /help"""
    user_id = update.effective_user.id
    is_admin = user_id == ADMIN_USER_ID
    
    help_text = (
        "ü§ñ <b>–°–ø—Ä–∞–≤–∫–∞ –ø–æ –±–æ—Ç—É</b>\n\n"
        
        "üìã <b>–ö–æ–º–∞–Ω–¥—ã:</b>\n"
        "/start - –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞\n"
        "/help - –≠—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞\n"
        "/ping - –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç—ã\n"
        "/rates - –ö—É—Ä—Å—ã –≤–∞–ª—é—Ç –∏ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç\n"
        "/stocks - –¢–æ–ø —Ä–æ—Å—Å–∏–π—Å–∫–∏—Ö –∞–∫—Ü–∏–π\n"
        "/my_id - –£–∑–Ω–∞—Ç—å —Å–≤–æ–π ID\n"
    )
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∞–¥–º–∏–Ω—Å–∫–∏–µ –∫–æ–º–∞–Ω–¥—ã —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
    if is_admin:
        help_text += "/broadcast [—Ç–µ–∫—Å—Ç] - –†–∞—Å—Å—ã–ª–∫–∞ –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º\n"
        help_text += "/send_message [ID] [—Ç–µ–∫—Å—Ç] - –õ–∏—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ\n"
        help_text += "/fix_admin_id - –ò—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞\n"
        help_text += "/users_info - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö\n"
        help_text += "/add_user [ID] [–∏–º—è] - –î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n"
        help_text += "/remove_user [ID] - –£–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n"
        help_text += "/set_template [—à–∞–±–ª–æ–Ω] - –ù–∞—Å—Ç—Ä–æ–∏—Ç—å —à–∞–±–ª–æ–Ω\n"
        help_text += "/get_template - –ü—Ä–æ—Å–º–æ—Ç—Ä —à–∞–±–ª–æ–Ω–∞\n"
    elif ADMIN_USER_ID == 0:
        # –ï—Å–ª–∏ ADMIN_USER_ID –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—É –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤—Å–µ–º
        help_text += "/fix_admin_id - –°—Ç–∞—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º (–Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω)\n"
    
    help_text += (
        "\nüí± <b>–§—É–Ω–∫—Ü–∏–∏:</b>\n"
        "‚Ä¢ –ö—É—Ä—Å—ã –≤–∞–ª—é—Ç –¶–ë –†–§ (USD, EUR, CNY)\n"
        "‚Ä¢ –ö—É—Ä—Å—ã –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç (Bitcoin, Ethereum, Dogecoin, TON)\n"
        "‚Ä¢ –¢–æ–ø —Ä–æ—Å—Å–∏–π—Å–∫–∏—Ö –∞–∫—Ü–∏–π (–ú–æ—Å–∫–æ–≤—Å–∫–∞—è –±–∏—Ä–∂–∞)\n"
    )
    
    if is_admin:
        help_text += "‚Ä¢ –ú–∞—Å—Å–æ–≤–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞ —Å –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º—ã–º–∏ —à–∞–±–ª–æ–Ω–∞–º–∏ (—Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω)\n"
        help_text += "‚Ä¢ –õ–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º (—Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω)\n"
        help_text += "‚Ä¢ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–∞–∑–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (—Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω)\n"
    
    help_text += (
        "\n‚ÑπÔ∏è <b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:</b>\n"
        "–ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—é —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞."
    )
    
    if is_admin:
        help_text += f"\n\nüë®‚Äçüíª <b>–°—Ç–∞—Ç—É—Å:</b> –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä\nüìä –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –±–∞–∑–µ: {len(user_data)}"
    
    await update.message.reply_html(help_text)

async def ping_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–ö–æ–º–∞–Ω–¥–∞ /ping"""
    current_time = datetime.now().strftime("%H:%M:%S")
    await update.message.reply_text(f"üèì –ü–æ–Ω–≥! –í—Ä–µ–º—è: {current_time}")

async def my_id_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–ö–æ–º–∞–Ω–¥–∞ /my_id"""
    user_id = update.effective_user.id
    username = update.effective_user.username
    first_name = update.effective_user.first_name
    
    id_text = (
        f"üÜî <b>–í–∞—à–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:</b>\n\n"
        f"üë§ <b>ID:</b> <code>{user_id}</code>\n"
        f"üìù <b>–ò–º—è:</b> {first_name}\n"
    )
    
    if username:
        id_text += f"üî§ <b>Username:</b> @{username}\n"
    
    if user_id == ADMIN_USER_ID:
        id_text += f"\nüë®‚Äçüíª <b>–°—Ç–∞—Ç—É—Å:</b> –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä"
    
    await update.message.reply_html(id_text)

async def admin_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å"""
    user_id = update.effective_user.id
    
    if user_id != ADMIN_USER_ID:
        await update.message.reply_text("‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω!")
        return
    
    uptime = datetime.now() - bot_start_time
    uptime_str = str(uptime).split('.')[0]  # –£–±–∏—Ä–∞–µ–º –º–∏–∫—Ä–æ—Å–µ–∫—É–Ω–¥—ã
    
    admin_text = (
        f"üë®‚Äçüíª <b>–ê–î–ú–ò–ù –ü–ê–ù–ï–õ–¨</b>\n\n"
        
        f"üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</b>\n"
        f"‚Ä¢ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {len(user_data)}\n"
        f"‚Ä¢ –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: {uptime_str}\n"
        f"‚Ä¢ –ó–∞–ø—É—â–µ–Ω: {bot_start_time.strftime('%d.%m.%Y %H:%M')}\n\n"
        
        f"üîß <b>–ö–æ–º–∞–Ω–¥—ã:</b>\n"
        f"/admin - –≠—Ç–∞ –ø–∞–Ω–µ–ª—å\n"
        f"/ping - –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç—ã\n"
        f"/rates - –ö—É—Ä—Å—ã –≤–∞–ª—é—Ç –∏ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç\n"
        f"/stocks - –¢–æ–ø —Ä–æ—Å—Å–∏–π—Å–∫–∏—Ö –∞–∫—Ü–∏–π\n"
        f"/broadcast [—Ç–µ–∫—Å—Ç] - –†–∞—Å—Å—ã–ª–∫–∞ –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º\n"
        f"/send_message [ID] [—Ç–µ–∫—Å—Ç] - –õ–∏—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é\n"
        f"/fix_admin_id - –ò—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞\n"
        f"/users_info - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö –±–æ—Ç–∞\n"
        f"/add_user [ID] [–∏–º—è] - –î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤—Ä—É—á–Ω—É—é\n"
        f"/remove_user [ID] - –£–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã\n"
        f"/set_template [—à–∞–±–ª–æ–Ω] - –ù–∞—Å—Ç—Ä–æ–∏—Ç—å —à–∞–±–ª–æ–Ω —Å–æ–æ–±—â–µ–Ω–∏–π\n"
        f"/get_template - –ü—Ä–æ—Å–º–æ—Ç—Ä —Ç–µ–∫—É—â–µ–≥–æ —à–∞–±–ª–æ–Ω–∞\n\n"
        
        f"üí± <b>–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:</b>\n"
        f"‚Ä¢ –ö—É—Ä—Å—ã –≤–∞–ª—é—Ç –¶–ë –†–§ (USD, EUR, CNY)\n"
        f"‚Ä¢ –ö—É—Ä—Å—ã –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç (BTC, ETH, DOGE, TON)\n"
        f"‚Ä¢ –¢–æ–ø —Ä–æ—Å—Å–∏–π—Å–∫–∏—Ö –∞–∫—Ü–∏–π (–ú–æ—Å–∫–æ–≤—Å–∫–∞—è –±–∏—Ä–∂–∞)\n"
        f"‚Ä¢ –ú–∞—Å—Å–æ–≤–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π\n"
        f"‚Ä¢ –õ–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º\n"
        f"‚Ä¢ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–∞–∑–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π\n"
        f"‚Ä¢ –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º—ã–µ —à–∞–±–ª–æ–Ω—ã —Å–æ–æ–±—â–µ–Ω–∏–π\n\n"
        
        f"üë• <b>–ë–∞–∑–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:</b>\n"
        f"‚Ä¢ –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {len(user_data)}\n"
        f"‚Ä¢ –î–æ–±–∞–≤–ª–µ–Ω–æ —á–µ—Ä–µ–∑ /start: {sum(1 for u in user_data.values() if not u.get('added_by_admin'))}\n"
        f"‚Ä¢ –î–æ–±–∞–≤–ª–µ–Ω–æ –∞–¥–º–∏–Ω–æ–º: {sum(1 for u in user_data.values() if u.get('added_by_admin'))}\n\n"
        
        f"üì¢ <b>–°–∏—Å—Ç–µ–º–∞ —Å–æ–æ–±—â–µ–Ω–∏–π:</b>\n"
        f"üë• –ü–æ–ª—É—á–∞—Ç–µ–ª–µ–π –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏: {len(user_data)}\n"
        f"üìã –¢–µ–∫—É—â–∏–π —à–∞–±–ª–æ–Ω: <code>{bot_settings.get('message_template', '–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')[:50]}{'...' if len(bot_settings.get('message_template', '')) > 50 else ''}</code>\n"
        f"üí° –ò—Å–ø–æ–ª—å–∑—É–π: <code>/broadcast –¢–µ–∫—Å—Ç</code> –∏–ª–∏ <code>/send_message ID –¢–µ–∫—Å—Ç</code>\n\n"
        
        f"üîß <b>ADMIN_USER_ID:</b> {ADMIN_USER_ID}\n"
        f"üÜî <b>–í–∞—à ID:</b> {user_id}\n"
        f"‚úÖ <b>–ü—Ä–∞–≤–∞:</b> {'–ö–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ' if user_id == ADMIN_USER_ID else '‚ùå –¢—Ä–µ–±—É—é—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è (/fix_admin_id)'}\n\n"
        
        f"‚ÑπÔ∏è <b>–°—Ç–∞—Ç—É—Å:</b> –ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—é"
    )
    
    await update.message.reply_html(admin_text)

async def echo(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–±—ã—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    message_text = update.message.text
    user_id = update.effective_user.id
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if user_id in user_data:
        user_data[user_id]['last_active'] = datetime.now().isoformat()
    
    # –ü—Ä–æ—Å—Ç–æ–π —ç—Ö–æ –æ—Ç–≤–µ—Ç
    await update.message.reply_text(
        f"–ü–æ–ª—É—á–∏–ª: {message_text}\n\n"
        f"üí° –ò—Å–ø–æ–ª—å–∑—É–π /help –¥–ª—è —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥"
    )

async def rates_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–ü–æ–ª—É—á–∏—Ç—å –∫—É—Ä—Å—ã –≤–∞–ª—é—Ç –∏ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç"""
    try:
        await update.message.reply_text("üìä –ü–æ–ª—É—á–∞—é –∫—É—Ä—Å—ã –≤–∞–ª—é—Ç –∏ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç...")
        
        import requests
        
        # 1. –ö—É—Ä—Å—ã –≤–∞–ª—é—Ç –¶–ë –†–§
        try:
            cbr_response = requests.get("https://www.cbr-xml-daily.ru/daily_json.js", timeout=10)
            cbr_response.raise_for_status()
            cbr_data = cbr_response.json()
            
            # –ü–æ–ª—É—á–∞–µ–º –∫—É—Ä—Å—ã –≤–∞–ª—é—Ç
            usd_rate = cbr_data.get('Valute', {}).get('USD', {}).get('Value', '–ù/–î')
            eur_rate = cbr_data.get('Valute', {}).get('EUR', {}).get('Value', '–ù/–î')
            cny_rate = cbr_data.get('Valute', {}).get('CNY', {}).get('Value', '–ù/–î')
            
            # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –≤–∞–ª—é—Ç–Ω—ã–µ –∫—É—Ä—Å—ã
            usd_str = f"{usd_rate:.2f} ‚ÇΩ" if isinstance(usd_rate, (int, float)) else str(usd_rate)
            eur_str = f"{eur_rate:.2f} ‚ÇΩ" if isinstance(eur_rate, (int, float)) else str(eur_rate)
            cny_str = f"{cny_rate:.2f} ‚ÇΩ" if isinstance(cny_rate, (int, float)) else str(cny_rate)
                
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫—É—Ä—Å–æ–≤ –¶–ë –†–§: {e}")
            usd_str = eur_str = cny_str = "‚ùå –û—à–∏–±–∫–∞ API"
        
        # 2. –ö—É—Ä—Å—ã –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç CoinGecko
        try:
            crypto_response = requests.get(
                "https://api.coingecko.com/api/v3/simple/price?ids=bitcoin,ethereum,dogecoin,the-open-network&vs_currencies=usd",
                timeout=10
            )
            crypto_response.raise_for_status()
            crypto_data = crypto_response.json()
            
            # –ü–æ–ª—É—á–∞–µ–º —Ü–µ–Ω—ã –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç
            bitcoin_price = crypto_data.get('bitcoin', {}).get('usd', '–ù/–î')
            ethereum_price = crypto_data.get('ethereum', {}).get('usd', '–ù/–î')
            dogecoin_price = crypto_data.get('dogecoin', {}).get('usd', '–ù/–î')
            ton_price = crypto_data.get('the-open-network', {}).get('usd', '–ù/–î')
            
            # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–Ω—ã–µ —Ü–µ–Ω—ã
            btc_str = f"${bitcoin_price:,.0f}" if isinstance(bitcoin_price, (int, float)) else str(bitcoin_price)
            eth_str = f"${ethereum_price:,.0f}" if isinstance(ethereum_price, (int, float)) else str(ethereum_price)
            doge_str = f"${dogecoin_price:.4f}" if isinstance(dogecoin_price, (int, float)) else str(dogecoin_price)
            ton_str = f"${ton_price:.2f}" if isinstance(ton_price, (int, float)) else str(ton_price)
                
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫—É—Ä—Å–æ–≤ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç: {e}")
            btc_str = eth_str = doge_str = ton_str = "‚ùå –û—à–∏–±–∫–∞ API"
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º –∏—Ç–æ–≥–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        current_time = datetime.now().strftime("%d.%m.%Y %H:%M")
        
        message = f"""üìä <b>–ö–£–†–°–´ –í–ê–õ–Æ–¢ –ò –ö–†–ò–ü–¢–û–í–ê–õ–Æ–¢</b>

üí± <b>–ö—É—Ä—Å—ã –≤–∞–ª—é—Ç –¶–ë –†–§:</b>
üá∫üá∏ USD: {usd_str}
üá™üá∫ EUR: {eur_str}
üá®üá≥ CNY: {cny_str}

‚Çø <b>–ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã:</b>
üü† Bitcoin: {btc_str}
üî∑ Ethereum: {eth_str}
üêï Dogecoin: {doge_str}
üíé TON: {ton_str}

‚è∞ <b>–í—Ä–µ–º—è:</b> {current_time}
üì° <b>–ò—Å—Ç–æ—á–Ω–∏–∫–∏:</b> –¶–ë –†–§, CoinGecko"""

        await update.message.reply_html(message)
        
    except Exception as e:
        logger.error(f"–û–±—â–∞—è –æ—à–∏–±–∫–∞ –≤ rates_command: {e}")
        await update.message.reply_text(
            f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫—É—Ä—Å–æ–≤: {str(e)}\n\n"
            f"üîÑ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É."
        )

async def broadcast_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–ú–∞—Å—Å–æ–≤–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º (—Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω)"""
    user_id = update.effective_user.id
    
    # –í–†–ï–ú–ï–ù–ù–ê–Ø –û–¢–õ–ê–î–ö–ê - –ø–æ–∫–∞–∂–µ–º —Ä–µ–∞–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
    debug_info = (
        f"üêõ <b>–û–¢–õ–ê–î–û–ß–ù–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø:</b>\n"
        f"‚Ä¢ –í–∞—à ID: <code>{user_id}</code>\n"
        f"‚Ä¢ ADMIN_USER_ID: <code>{ADMIN_USER_ID}</code>\n"
        f"‚Ä¢ –°–æ–≤–ø–∞–¥–∞—é—Ç: {'‚úÖ –î–∞' if user_id == ADMIN_USER_ID else '‚ùå –ù–µ—Ç'}\n\n"
    )
    
    # –ï—Å–ª–∏ ADMIN_USER_ID = 0, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ
    if ADMIN_USER_ID == 0:
        await update.message.reply_html(
            debug_info +
            f"‚ö†Ô∏è <b>–ü–†–û–ë–õ–ï–ú–ê –ù–ê–°–¢–†–û–ô–ö–ò!</b>\n\n"
            f"üîß <b>ADMIN_USER_ID –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!</b>\n"
            f"‚Ä¢ –¢–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: {ADMIN_USER_ID} (–Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ)\n"
            f"‚Ä¢ –í–∞—à ID: {user_id}\n\n"
            f"üõ†Ô∏è <b>–î–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è:</b>\n"
            f"1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è ADMIN_USER_ID = {user_id}\n"
            f"2. –ò–ª–∏ —è –º–æ–≥—É –≤—Ä–µ–º–µ–Ω–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤–∞—à ID\n\n"
            f"üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: /fix_admin_id —á—Ç–æ–±—ã –∏—Å–ø—Ä–∞–≤–∏—Ç—å"
        )
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    if user_id != ADMIN_USER_ID:
        await update.message.reply_html(
            debug_info +
            f"‚ùå <b>–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω!</b>\n"
            f"–¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É.\n\n"
            f"üí° –ï—Å–ª–∏ —ç—Ç–æ –æ—à–∏–±–∫–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: /fix_admin_id"
        )
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–µ–∫—Å—Ç–∞ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏
    if not context.args:
        await update.message.reply_html(
            "üì¢ <b>–ú–ê–°–°–û–í–ê–Ø –†–ê–°–°–´–õ–ö–ê</b>\n\n"
            "üîç <b>–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:</b>\n"
            "<code>/broadcast [—Å–æ–æ–±—â–µ–Ω–∏–µ]</code>\n\n"
            "üí° <b>–ü—Ä–∏–º–µ—Ä—ã:</b>\n"
            "‚Ä¢ <code>/broadcast –ü—Ä–∏–≤–µ—Ç –≤—Å–µ–º!</code>\n"
            "‚Ä¢ <code>/broadcast üéâ –ù–æ–≤–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–æ—Ç–∞!</code>\n"
            "‚Ä¢ <code>/broadcast –¢–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ —Å 15:00 –¥–æ 16:00</code>\n\n"
            "üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</b>\n"
            f"üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏: <b>{len(user_data)}</b>\n\n"
            "‚ö†Ô∏è <b>–í–Ω–∏–º–∞–Ω–∏–µ:</b> –°–æ–æ–±—â–µ–Ω–∏–µ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –í–°–ï–ú –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –±–æ—Ç–∞!"
        )
        return
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
    broadcast_text = " ".join(context.args)
    
    # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Ä–∞—Å—Å—ã–ª–∫–∏
    confirm_msg = await update.message.reply_html(
        f"üì¢ <b>–ü–û–î–¢–í–ï–†–ñ–î–ï–ù–ò–ï –†–ê–°–°–´–õ–ö–ò</b>\n\n"
        f"üìù <b>–°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏:</b>\n"
        f"<code>{broadcast_text}</code>\n\n"
        f"üë• <b>–ü–æ–ª—É—á–∞—Ç–µ–ª–µ–π:</b> {len(user_data)} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π\n\n"
        f"üöÄ –ù–∞—á–∏–Ω–∞—é —Ä–∞—Å—Å—ã–ª–∫—É..."
    )
    
    # –°—á–µ—Ç—á–∏–∫–∏ –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    sent_count = 0
    error_count = 0
    errors = []
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–∞–∂–¥–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    for target_user_id, user_info in user_data.items():
        try:
            # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —à–∞–±–ª–æ–Ω–∞
            template = bot_settings.get('message_template', '{message}')
            admin_message = template.format(message=broadcast_text)
            
            await context.bot.send_message(
                chat_id=target_user_id,
                text=admin_message,
                parse_mode='HTML'
            )
            sent_count += 1
            
            # –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞, —á—Ç–æ–±—ã –Ω–µ –ø—Ä–µ–≤—ã—Å–∏—Ç—å –ª–∏–º–∏—Ç—ã Telegram
            await asyncio.sleep(0.1)
            
        except Exception as e:
            error_count += 1
            user_name = user_info.get('name', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')
            error_msg = str(e)
            
            # –°–æ–∫—Ä–∞—â–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –¥–ª—è –æ—Ç—á–µ—Ç–∞
            if len(error_msg) > 50:
                error_msg = error_msg[:47] + "..."
            
            errors.append(f"üë§ {user_name} (ID: {target_user_id}): {error_msg}")
            
            logger.warning(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ä–∞—Å—Å—ã–ª–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {target_user_id}: {e}")
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç—á–µ—Ç –æ —Ä–∞—Å—Å—ã–ª–∫–µ
    report_text = f"üìä <b>–û–¢–ß–ï–¢ –û –†–ê–°–°–´–õ–ö–ï</b>\n\n"
    report_text += f"‚úÖ <b>–£—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ:</b> {sent_count}\n"
    report_text += f"‚ùå <b>–û—à–∏–±–æ–∫:</b> {error_count}\n"
    report_text += f"üìã <b>–í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:</b> {len(user_data)}\n\n"
    
    if sent_count > 0:
        success_rate = (sent_count / len(user_data)) * 100
        report_text += f"üìà <b>–£—Å–ø–µ—à–Ω–æ—Å—Ç—å:</b> {success_rate:.1f}%\n\n"
    
    report_text += f"üìù <b>–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:</b>\n<code>{broadcast_text}</code>\n\n"
    
    # –î–æ–±–∞–≤–ª—è–µ–º –¥–µ—Ç–∞–ª–∏ –æ—à–∏–±–æ–∫ (—Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–µ 5)
    if errors:
        report_text += f"üîç <b>–î–µ—Ç–∞–ª–∏ –æ—à–∏–±–æ–∫:</b>\n"
        for error in errors[:5]:
            report_text += f"‚Ä¢ {error}\n"
        
        if len(errors) > 5:
            report_text += f"‚Ä¢ ... –∏ –µ—â–µ {len(errors) - 5} –æ—à–∏–±–æ–∫\n"
        
        report_text += f"\nüí° <b>–ü—Ä–∏—á–∏–Ω—ã –æ—à–∏–±–æ–∫:</b>\n"
        report_text += f"‚Ä¢ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –±–æ—Ç–∞\n"
        report_text += f"‚Ä¢ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–¥–∞–ª–∏–ª –∞–∫–∫–∞—É–Ω—Ç\n"
        report_text += f"‚Ä¢ –í—Ä–µ–º–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã —Å–µ—Ç–∏\n"
    
    report_text += f"\n‚è∞ <b>–í—Ä–µ–º—è —Ä–∞—Å—Å—ã–ª–∫–∏:</b> {datetime.now().strftime('%d.%m.%Y %H:%M:%S')}"
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç—á–µ—Ç
    await confirm_msg.edit_text(report_text, parse_mode='HTML')
    
    # –õ–æ–≥–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    logger.info(f"üì¢ –†–∞—Å—Å—ã–ª–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞: {sent_count} —É—Å–ø–µ—à–Ω–æ, {error_count} –æ—à–∏–±–æ–∫")

async def fix_admin_id_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–í—Ä–µ–º–µ–Ω–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ ADMIN_USER_ID"""
    global ADMIN_USER_ID
    user_id = update.effective_user.id
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    current_info = (
        f"üîß <b>–ò–°–ü–†–ê–í–õ–ï–ù–ò–ï ADMIN_USER_ID</b>\n\n"
        f"üìä <b>–¢–µ–∫—É—â–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è:</b>\n"
        f"‚Ä¢ –í–∞—à ID: <code>{user_id}</code>\n"
        f"‚Ä¢ ADMIN_USER_ID: <code>{ADMIN_USER_ID}</code>\n"
        f"‚Ä¢ –ò–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è: <code>{os.getenv('ADMIN_USER_ID', '–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù–ê')}</code>\n\n"
    )
    
    # –ï—Å–ª–∏ —É–∂–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ
    if ADMIN_USER_ID == user_id:
        await update.message.reply_html(
            current_info +
            f"‚úÖ <b>–£–ñ–ï –ù–ê–°–¢–†–û–ï–ù–û –ü–†–ê–í–ò–õ–¨–ù–û!</b>\n\n"
            f"ADMIN_USER_ID = {ADMIN_USER_ID} —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å –≤–∞—à–∏–º ID.\n"
            f"–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /broadcast —Å–Ω–æ–≤–∞."
        )
        return
    
    # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º ADMIN_USER_ID
    old_admin_id = ADMIN_USER_ID
    ADMIN_USER_ID = user_id
    
    success_msg = (
        current_info +
        f"‚úÖ <b>–ò–°–ü–†–ê–í–õ–ï–ù–û –£–°–ü–ï–®–ù–û!</b>\n\n"
        f"üîÑ <b>–ò–∑–º–µ–Ω–µ–Ω–∏—è:</b>\n"
        f"‚Ä¢ –ë—ã–ª–æ: <code>{old_admin_id}</code>\n"
        f"‚Ä¢ –°—Ç–∞–ª–æ: <code>{ADMIN_USER_ID}</code>\n\n"
        f"üéâ <b>–¢–µ–ø–µ—Ä—å –≤—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä!</b>\n"
        f"–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /broadcast\n\n"
        f"‚ö†Ô∏è <b>–í–ù–ò–ú–ê–ù–ò–ï:</b> –≠—Ç–æ –≤—Ä–µ–º–µ–Ω–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ!\n"
        f"–ü–æ—Å–ª–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞ –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç:\n"
        f"1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é ADMIN_USER_ID = {user_id} –Ω–∞ Railway\n"
        f"2. –ò–ª–∏ —Å–Ω–æ–≤–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å /fix_admin_id"
    )
    
    await update.message.reply_html(success_msg)
    
    # –õ–æ–≥–∏—Ä—É–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏–µ
    logger.info(f"üîß ADMIN_USER_ID –∏—Å–ø—Ä–∞–≤–ª–µ–Ω: {old_admin_id} ‚Üí {ADMIN_USER_ID}")

async def users_info_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö –±–æ—Ç–∞ (—Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω)"""
    user_id = update.effective_user.id
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    if user_id != ADMIN_USER_ID:
        await update.message.reply_text("‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω! –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É.")
        return
    
    if not user_data:
        await update.message.reply_html(
            "üë• <b>–ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø–•</b>\n\n"
            "üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</b>\n"
            "‚Ä¢ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –±–∞–∑–µ: <b>0</b>\n\n"
            "üí° <b>–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:</b>\n"
            "‚Ä¢ –ù–∏–∫—Ç–æ –µ—â–µ –Ω–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª –∫–æ–º–∞–Ω–¥—É /start\n"
            "‚Ä¢ –î–∞–Ω–Ω—ã–µ –Ω–µ —Å–æ—Ö—Ä–∞–Ω–∏–ª–∏—Å—å –∏–∑ —Ñ–∞–π–ª–∞\n"
            "‚Ä¢ –§–∞–π–ª user_data.json –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç\n\n"
            "üîß <b>–î–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è:</b>\n"
            "–ü–æ–ø—Ä–æ—Å–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤—ã–ø–æ–ª–Ω–∏—Ç—å /start"
        )
        return
    
    # –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ –≤—Ä–µ–º–µ–Ω–∏ –ø–æ—Å–ª–µ–¥–Ω–µ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
    sorted_users = sorted(
        user_data.items(), 
        key=lambda x: x[1].get('last_activity', ''), 
        reverse=True
    )
    
    info_text = f"üë• <b>–ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø–•</b>\n\n"
    info_text += f"üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</b>\n"
    info_text += f"‚Ä¢ –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: <b>{len(user_data)}</b>\n"
    info_text += f"‚Ä¢ –§–∞–π–ª –¥–∞–Ω–Ω—ã—Ö: <code>{USER_DATA_FILE}</code>\n\n"
    
    info_text += f"üë§ <b>–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:</b>\n"
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã—Ö 10 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    for i, (uid, info) in enumerate(sorted_users[:10], 1):
        name = info.get('name', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')
        username = info.get('username', '–Ω–µ—Ç')
        last_activity = info.get('last_activity', '–Ω–∏–∫–æ–≥–¥–∞')
        
        # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–∞—Ç—É –µ—Å–ª–∏ –æ–Ω–∞ –µ—Å—Ç—å
        try:
            if last_activity != '–Ω–∏–∫–æ–≥–¥–∞':
                dt = datetime.fromisoformat(last_activity)
                last_activity = dt.strftime('%d.%m.%Y %H:%M')
        except:
            pass
        
        username_text = f"@{username}" if username and username != '–Ω–µ—Ç' else "–±–µ–∑ username"
        
        # –î–æ–±–∞–≤–ª—è–µ–º –º–µ—Ç–∫—É –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö –∞–¥–º–∏–Ω–æ–º
        admin_mark = " üë®‚Äçüíª" if info.get('added_by_admin') else ""
        
        info_text += f"{i}. <b>{name}</b>{admin_mark} ({username_text})\n"
        info_text += f"   ID: <code>{uid}</code>\n"
        info_text += f"   –ê–∫—Ç–∏–≤–µ–Ω: {last_activity}\n\n"
    
    if len(user_data) > 10:
        info_text += f"... –∏ –µ—â–µ {len(user_data) - 10} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π\n\n"
    
    info_text += f"üíæ <b>–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö:</b>\n"
    info_text += f"‚Ä¢ –ê–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø—Ä–∏ –∫–∞–∂–¥–æ–º /start\n"
    info_text += f"‚Ä¢ –ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞\n"
    info_text += f"‚Ä¢ –ó–∞—â–∏—Ç–∞ –æ—Ç –ø–æ—Ç–µ—Ä–∏ –ø—Ä–∏ —Ä–µ–¥–µ–ø–ª–æ–µ\n\n"
    
    info_text += f"üí° <b>–û–±–æ–∑–Ω–∞—á–µ–Ω–∏—è:</b>\n"
    info_text += f"üë®‚Äçüíª - –¥–æ–±–∞–≤–ª–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º\n"
    info_text += f"‚Ä¢ –ë–µ–∑ –º–µ—Ç–∫–∏ - –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è —á–µ—Ä–µ–∑ /start\n\n"
    
    info_text += f"üîß <b>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:</b>\n"
    info_text += f"/add_user [ID] [–∏–º—è] - –¥–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n"
    info_text += f"/remove_user [ID] - —É–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
    
    await update.message.reply_html(info_text)

async def add_user_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–†—É—á–Ω–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ ID (—Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω)"""
    user_id = update.effective_user.id
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    if user_id != ADMIN_USER_ID:
        await update.message.reply_text("‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω! –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É.")
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã
    if not context.args:
        await update.message.reply_html(
            "‚ûï <b>–î–û–ë–ê–í–õ–ï–ù–ò–ï –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø</b>\n\n"
            "üîç <b>–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:</b>\n"
            "<code>/add_user [ID] [–∏–º—è]</code>\n\n"
            "üí° <b>–ü—Ä–∏–º–µ—Ä—ã:</b>\n"
            "‚Ä¢ <code>/add_user 123456789</code>\n"
            "‚Ä¢ <code>/add_user 123456789 –ê–Ω–Ω–∞</code>\n"
            "‚Ä¢ <code>/add_user 987654321 –ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤</code>\n\n"
            "üìä <b>–¢–µ–∫—É—â–∞—è –±–∞–∑–∞:</b>\n"
            f"üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: <b>{len(user_data)}</b>\n\n"
            "‚ö†Ô∏è <b>–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ:</b>\n"
            "‚Ä¢ ID –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º\n"
            "‚Ä¢ –ò–º—è –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ\n"
            "‚Ä¢ –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –µ—Å—Ç—å - –¥–∞–Ω–Ω—ã–µ –æ–±–Ω–æ–≤—è—Ç—Å—è"
        )
        return
    
    # –ü–æ–ª—É—á–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    try:
        target_user_id = int(context.args[0])
    except ValueError:
        await update.message.reply_html(
            "‚ùå <b>–û–®–ò–ë–ö–ê –§–û–†–ú–ê–¢–ê!</b>\n\n"
            f"'{context.args[0]}' –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —á–∏—Å–ª–æ–º.\n\n"
            "üí° <b>–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç:</b>\n"
            "<code>/add_user 123456789 –ò–º—è</code>"
        )
        return
    
    # –ü–æ–ª—É—á–∞–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–µ—Å–ª–∏ —É–∫–∞–∑–∞–Ω–æ)
    if len(context.args) > 1:
        user_name = " ".join(context.args[1:])
    else:
        user_name = "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å (–¥–æ–±–∞–≤–ª–µ–Ω –∞–¥–º–∏–Ω–æ–º)"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    is_existing = target_user_id in user_data
    
    # –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ —á–µ—Ä–µ–∑ Telegram API
    real_user_info = None
    try:
        # –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é —á–µ—Ä–µ–∑ getChat
        chat_info = await context.bot.get_chat(target_user_id)
        if chat_info:
            real_user_info = {
                'first_name': chat_info.first_name or user_name,
                'username': chat_info.username,
                'type': chat_info.type
            }
    except Exception as e:
        logger.info(f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ {target_user_id}: {e}")
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    current_time = datetime.now().isoformat()
    
    if is_existing:
        # –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if real_user_info:
            user_data[target_user_id]['name'] = real_user_info['first_name']
            if real_user_info['username']:
                user_data[target_user_id]['username'] = real_user_info['username']
        else:
            user_data[target_user_id]['name'] = user_name
        
        user_data[target_user_id]['last_activity'] = current_time
        user_data[target_user_id]['updated_by_admin'] = current_time
        
        status = "–æ–±–Ω–æ–≤–ª–µ–Ω"
    else:
        # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user_data[target_user_id] = {
            'name': real_user_info['first_name'] if real_user_info else user_name,
            'username': real_user_info['username'] if real_user_info and real_user_info['username'] else None,
            'first_seen': current_time,
            'last_activity': current_time,
            'added_by_admin': True,
            'added_by_admin_time': current_time
        }
        status = "–¥–æ–±–∞–≤–ª–µ–Ω"
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
    save_user_data()
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç
    result_text = f"‚úÖ <b>–ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨ {status.upper()}!</b>\n\n"
    result_text += f"üë§ <b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:</b>\n"
    result_text += f"‚Ä¢ ID: <code>{target_user_id}</code>\n"
    result_text += f"‚Ä¢ –ò–º—è: <b>{user_data[target_user_id]['name']}</b>\n"
    
    if user_data[target_user_id].get('username'):
        result_text += f"‚Ä¢ Username: @{user_data[target_user_id]['username']}\n"
    else:
        result_text += f"‚Ä¢ Username: –Ω–µ —É–∫–∞–∑–∞–Ω\n"
    
    result_text += f"‚Ä¢ –°—Ç–∞—Ç—É—Å: {status}\n"
    
    if real_user_info:
        result_text += f"‚Ä¢ –ò—Å—Ç–æ—á–Ω–∏–∫ –¥–∞–Ω–Ω—ã—Ö: Telegram API ‚úÖ\n"
    else:
        result_text += f"‚Ä¢ –ò—Å—Ç–æ—á–Ω–∏–∫ –¥–∞–Ω–Ω—ã—Ö: —Ä—É—á–Ω–æ–π –≤–≤–æ–¥ üìù\n"
    
    result_text += f"\nüìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–∞–∑—ã:</b>\n"
    result_text += f"‚Ä¢ –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: <b>{len(user_data)}</b>\n"
    result_text += f"‚Ä¢ –î–æ–±–∞–≤–ª–µ–Ω–æ –∞–¥–º–∏–Ω–æ–º: <b>{sum(1 for u in user_data.values() if u.get('added_by_admin'))}</b>\n"
    
    result_text += f"\nüí° <b>–ß—Ç–æ —Ç–µ–ø–µ—Ä—å –¥–æ—Å—Ç—É–ø–Ω–æ:</b>\n"
    result_text += f"‚Ä¢ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–∫–ª—é—á–µ–Ω –≤ —Ä–∞—Å—Å—ã–ª–∫–∏ (/broadcast)\n"
    result_text += f"‚Ä¢ –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –≤ /users_info\n"
    result_text += f"‚Ä¢ –ú–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞\n"
    
    if not is_existing:
        result_text += f"\nüéØ <b>–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è:</b>\n"
        result_text += f"–û—Ç–ø—Ä–∞–≤—å—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Ç–æ–º, —á—Ç–æ –æ–Ω –¥–æ–±–∞–≤–ª–µ–Ω –≤ –±–æ—Ç–∞!"
    
    await update.message.reply_html(result_text)
    
    # –õ–æ–≥–∏—Ä—É–µ–º –¥–µ–π—Å—Ç–≤–∏–µ
    logger.info(f"üë®‚Äçüíª –ê–¥–º–∏–Ω {user_id} {status} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {target_user_id}: {user_data[target_user_id]['name']}")

async def remove_user_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–£–¥–∞–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ ID (—Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω)"""
    user_id = update.effective_user.id
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    if user_id != ADMIN_USER_ID:
        await update.message.reply_text("‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω! –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É.")
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã
    if not context.args:
        await update.message.reply_html(
            "üóëÔ∏è <b>–£–î–ê–õ–ï–ù–ò–ï –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø</b>\n\n"
            "üîç <b>–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:</b>\n"
            "<code>/remove_user [ID]</code>\n\n"
            "üí° <b>–ü—Ä–∏–º–µ—Ä—ã:</b>\n"
            "‚Ä¢ <code>/remove_user 123456789</code>\n\n"
            "üìä <b>–¢–µ–∫—É—â–∞—è –±–∞–∑–∞:</b>\n"
            f"üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: <b>{len(user_data)}</b>\n\n"
            "‚ö†Ô∏è <b>–í–Ω–∏–º–∞–Ω–∏–µ:</b>\n"
            "‚Ä¢ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±—É–¥–µ—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é —É–¥–∞–ª–µ–Ω –∏–∑ –±–∞–∑—ã\n"
            "‚Ä¢ –ù–µ —Å–º–æ–∂–µ—Ç –ø–æ–ª—É—á–∞—Ç—å —Ä–∞—Å—Å—ã–ª–∫–∏\n"
            "‚Ä¢ –û—Ç–º–µ–Ω–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è\n\n"
            "üí° <b>–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:</b> /users_info"
        )
        return
    
    # –ü–æ–ª—É—á–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    try:
        target_user_id = int(context.args[0])
    except ValueError:
        await update.message.reply_html(
            "‚ùå <b>–û–®–ò–ë–ö–ê –§–û–†–ú–ê–¢–ê!</b>\n\n"
            f"'{context.args[0]}' –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —á–∏—Å–ª–æ–º.\n\n"
            "üí° <b>–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç:</b>\n"
            "<code>/remove_user 123456789</code>"
        )
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    if target_user_id not in user_data:
        await update.message.reply_html(
            f"‚ùå <b>–ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨ –ù–ï –ù–ê–ô–î–ï–ù!</b>\n\n"
            f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID <code>{target_user_id}</code> –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ.\n\n"
            f"üìä <b>–¢–µ–∫—É—â–∞—è –±–∞–∑–∞:</b> {len(user_data)} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π\n\n"
            f"üí° <b>–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:</b> /users_info"
        )
        return
    
    # –ó–∞—â–∏—Ç–∞ –æ—Ç —É–¥–∞–ª–µ–Ω–∏—è —Å–∞–º–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    if target_user_id == ADMIN_USER_ID:
        await update.message.reply_html(
            "üõ°Ô∏è <b>–û–ü–ï–†–ê–¶–ò–Ø –ó–ê–ü–†–ï–©–ï–ù–ê!</b>\n\n"
            "–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ —É–¥–∞–ª–∏—Ç—å —Å–∞–º–æ–≥–æ —Å–µ–±—è –∏–∑ –±–∞–∑—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.\n\n"
            "üë®‚Äçüíª <b>–í—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä</b> - –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –∑–∞—â–∏—â–µ–Ω—ã –æ—Ç —É–¥–∞–ª–µ–Ω–∏—è."
        )
        return
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –¥–ª—è –æ—Ç—á–µ—Ç–∞
    removed_user = user_data[target_user_id].copy()
    
    # –£–¥–∞–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    del user_data[target_user_id]
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
    save_user_data()
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç—á–µ—Ç
    result_text = f"‚úÖ <b>–ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨ –£–î–ê–õ–ï–ù!</b>\n\n"
    result_text += f"üóëÔ∏è <b>–£–¥–∞–ª–µ–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:</b>\n"
    result_text += f"‚Ä¢ ID: <code>{target_user_id}</code>\n"
    result_text += f"‚Ä¢ –ò–º—è: <b>{removed_user.get('name', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}</b>\n"
    
    if removed_user.get('username'):
        result_text += f"‚Ä¢ Username: @{removed_user['username']}\n"
    else:
        result_text += f"‚Ä¢ Username: –Ω–µ —É–∫–∞–∑–∞–Ω\n"
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
    if removed_user.get('added_by_admin'):
        result_text += f"‚Ä¢ –ë—ã–ª –¥–æ–±–∞–≤–ª–µ–Ω: –∞–¥–º–∏–Ω–æ–º\n"
    else:
        result_text += f"‚Ä¢ –ë—ã–ª –¥–æ–±–∞–≤–ª–µ–Ω: —á–µ—Ä–µ–∑ /start\n"
    
    if removed_user.get('first_seen'):
        try:
            dt = datetime.fromisoformat(removed_user['first_seen'])
            result_text += f"‚Ä¢ –ü–µ—Ä–≤—ã–π –≤–∏–∑–∏—Ç: {dt.strftime('%d.%m.%Y %H:%M')}\n"
        except:
            pass
    
    result_text += f"\nüìä <b>–û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</b>\n"
    result_text += f"‚Ä¢ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –æ—Å—Ç–∞–ª–æ—Å—å: <b>{len(user_data)}</b>\n"
    result_text += f"‚Ä¢ –î–æ–±–∞–≤–ª–µ–Ω–æ –∞–¥–º–∏–Ω–æ–º: <b>{sum(1 for u in user_data.values() if u.get('added_by_admin'))}</b>\n"
    
    result_text += f"\n‚ùå <b>–ß—Ç–æ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å:</b>\n"
    result_text += f"‚Ä¢ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏—Å–∫–ª—é—á–µ–Ω –∏–∑ —Ä–∞—Å—Å—ã–ª–æ–∫\n"
    result_text += f"‚Ä¢ –ù–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –≤ /users_info\n"
    result_text += f"‚Ä¢ –ú–æ–∂–µ—Ç —Å–Ω–æ–≤–∞ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è —á–µ—Ä–µ–∑ /start\n"
    
    result_text += f"\nüí° <b>–î–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è:</b>\n"
    result_text += f"–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ <code>/add_user {target_user_id} {removed_user.get('name', '')}</code>"
    
    await update.message.reply_html(result_text)
    
    # –õ–æ–≥–∏—Ä—É–µ–º –¥–µ–π—Å—Ç–≤–∏–µ
    logger.info(f"üë®‚Äçüíª –ê–¥–º–∏–Ω {user_id} —É–¥–∞–ª–∏–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {target_user_id}: {removed_user.get('name', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}")

async def send_message_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é (—Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω)"""
    user_id = update.effective_user.id
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    if user_id != ADMIN_USER_ID:
        await update.message.reply_text("‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω! –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É.")
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã
    if not context.args or len(context.args) < 2:
        await update.message.reply_html(
            "üì® <b>–û–¢–ü–†–ê–í–ö–ê –õ–ò–ß–ù–û–ì–û –°–û–û–ë–©–ï–ù–ò–Ø</b>\n\n"
            "üîç <b>–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:</b>\n"
            "<code>/send_message [ID] [—Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è]</code>\n\n"
            "üí° <b>–ü—Ä–∏–º–µ—Ä—ã:</b>\n"
            "‚Ä¢ <code>/send_message 123456789 –ü—Ä–∏–≤–µ—Ç!</code>\n"
            "‚Ä¢ <code>/send_message 987654321 –ö–∞–∫ –¥–µ–ª–∞? –ù–∞–ø–∏—à–∏ –º–Ω–µ</code>\n"
            "‚Ä¢ <code>/send_message 555666777 üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è—é —Å –¥–Ω–µ–º —Ä–æ–∂–¥–µ–Ω–∏—è!</code>\n\n"
            f"üìä <b>–î–æ—Å—Ç—É–ø–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:</b> {len(user_data)}\n\n"
            f"üìã <b>–¢–µ–∫—É—â–∏–π —à–∞–±–ª–æ–Ω:</b>\n"
            f"<code>{bot_settings.get('message_template', '–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')}</code>\n\n"
            "‚öôÔ∏è <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∏:</b>\n"
            "/set_template [—à–∞–±–ª–æ–Ω] - –∏–∑–º–µ–Ω–∏—Ç—å —à–∞–±–ª–æ–Ω\n"
            "/users_info - —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"
        )
        return
    
    # –ü–æ–ª—É—á–∞–µ–º ID –ø–æ–ª—É—á–∞—Ç–µ–ª—è
    try:
        target_user_id = int(context.args[0])
    except ValueError:
        await update.message.reply_html(
            "‚ùå <b>–û–®–ò–ë–ö–ê –§–û–†–ú–ê–¢–ê!</b>\n\n"
            f"'{context.args[0]}' –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —á–∏—Å–ª–æ–º.\n\n"
            "üí° <b>–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç:</b>\n"
            "<code>/send_message 123456789 –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è</code>"
        )
        return
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
    message_text = " ".join(context.args[1:])
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–æ–ª—É—á–∞—Ç–µ–ª—å –≤ –±–∞–∑–µ
    if target_user_id not in user_data:
        await update.message.reply_html(
            f"‚ùå <b>–ü–û–õ–£–ß–ê–¢–ï–õ–¨ –ù–ï –ù–ê–ô–î–ï–ù!</b>\n\n"
            f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID <code>{target_user_id}</code> –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ.\n\n"
            f"üìä <b>–ë–∞–∑–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç:</b> {len(user_data)} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π\n\n"
            f"üí° <b>–í–∞—Ä–∏–∞–Ω—Ç—ã —Ä–µ—à–µ–Ω–∏—è:</b>\n"
            f"1. –î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: <code>/add_user {target_user_id} –ò–º—è</code>\n"
            f"2. –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫: /users_info\n"
            f"3. –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–∞–ø—Ä—è–º—É—é (–º–æ–∂–µ—Ç –Ω–µ —Å—Ä–∞–±–æ—Ç–∞—Ç—å)"
        )
        return
    
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—É—á–∞—Ç–µ–ª–µ
    recipient_info = user_data[target_user_id]
    recipient_name = recipient_info.get('name', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —à–∞–±–ª–æ–Ω–∞
    template = bot_settings.get('message_template', '{message}')
    formatted_message = template.format(message=message_text)
    
    # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–∫–∏
    confirm_text = (
        f"üì® <b>–û–¢–ü–†–ê–í–ö–ê –õ–ò–ß–ù–û–ì–û –°–û–û–ë–©–ï–ù–ò–Ø</b>\n\n"
        f"üì§ <b>–ü–æ–ª—É—á–∞—Ç–µ–ª—å:</b>\n"
        f"‚Ä¢ –ò–º—è: <b>{recipient_name}</b>\n"
        f"‚Ä¢ ID: <code>{target_user_id}</code>\n"
    )
    
    if recipient_info.get('username'):
        confirm_text += f"‚Ä¢ Username: @{recipient_info['username']}\n"
    
    confirm_text += f"\nüìù <b>–°–æ–æ–±—â–µ–Ω–∏–µ:</b>\n{formatted_message}\n\nüöÄ –û—Ç–ø—Ä–∞–≤–ª—è—é..."
    
    confirm_msg = await update.message.reply_html(confirm_text)
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    try:
        await context.bot.send_message(
            chat_id=target_user_id,
            text=formatted_message,
            parse_mode='HTML'
        )
        
        # –£—Å–ø–µ—à–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞
        success_text = (
            f"‚úÖ <b>–°–û–û–ë–©–ï–ù–ò–ï –û–¢–ü–†–ê–í–õ–ï–ù–û!</b>\n\n"
            f"üì§ <b>–ü–æ–ª—É—á–∞—Ç–µ–ª—å:</b> {recipient_name} (ID: {target_user_id})\n"
            f"üìù <b>–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ:</b>\n{formatted_message}\n\n"
            f"‚è∞ <b>–í—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏:</b> {datetime.now().strftime('%d.%m.%Y %H:%M:%S')}\n\n"
            f"üí° <b>–ß—Ç–æ –¥–∞–ª—å—à–µ:</b>\n"
            f"‚Ä¢ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–ª—É—á–∏–ª –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ\n"
            f"‚Ä¢ –ú–æ–∂–µ—Ç –æ—Ç–≤–µ—Ç–∏—Ç—å –≤ –±–æ—Ç–µ\n"
            f"‚Ä¢ –í—ã —É–≤–∏–¥–∏—Ç–µ –æ—Ç–≤–µ—Ç –≤ —á–∞—Ç–µ –±–æ—Ç–∞"
        )
        
        await confirm_msg.edit_text(success_text, parse_mode='HTML')
        
        # –õ–æ–≥–∏—Ä—É–µ–º —É—Å–ø–µ—à–Ω—É—é –æ—Ç–ø—Ä–∞–≤–∫—É
        logger.info(f"üì® –õ–∏—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –∞–¥–º–∏–Ω–∞ {user_id} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {target_user_id}")
        
    except Exception as e:
        # –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏
        error_text = (
            f"‚ùå <b>–û–®–ò–ë–ö–ê –û–¢–ü–†–ê–í–ö–ò!</b>\n\n"
            f"üì§ <b>–ü–æ–ª—É—á–∞—Ç–µ–ª—å:</b> {recipient_name} (ID: {target_user_id})\n"
            f"üìù <b>–°–æ–æ–±—â–µ–Ω–∏–µ:</b> {message_text}\n\n"
            f"üö´ <b>–ü—Ä–∏—á–∏–Ω–∞ –æ—à–∏–±–∫–∏:</b>\n{str(e)}\n\n"
            f"üí° <b>–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:</b>\n"
            f"‚Ä¢ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –±–æ—Ç–∞\n"
            f"‚Ä¢ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–¥–∞–ª–∏–ª –∞–∫–∫–∞—É–Ω—Ç\n"
            f"‚Ä¢ –ü—Ä–æ–±–ª–µ–º—ã —Å —Å–µ—Ç—å—é\n"
            f"‚Ä¢ –ù–µ–≤–µ—Ä–Ω—ã–π ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n\n"
            f"üîß <b>–ß—Ç–æ –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å:</b>\n"
            f"‚Ä¢ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å ID —á–µ—Ä–µ–∑ /users_info\n"
            f"‚Ä¢ –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –ø–æ–∑–∂–µ\n"
            f"‚Ä¢ –°–≤—è–∑–∞—Ç—å—Å—è –¥—Ä—É–≥–∏–º —Å–ø–æ—Å–æ–±–æ–º"
        )
        
        await confirm_msg.edit_text(error_text, parse_mode='HTML')
        
        # –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É
        logger.warning(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ª–∏—á–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è {target_user_id}: {e}")

async def set_template_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —à–∞–±–ª–æ–Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–π (—Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω)"""
    user_id = update.effective_user.id
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    if user_id != ADMIN_USER_ID:
        await update.message.reply_text("‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω! –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É.")
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã
    if not context.args:
        current_template = bot_settings.get('message_template', '–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')
        await update.message.reply_html(
            "‚öôÔ∏è <b>–ù–ê–°–¢–†–û–ô–ö–ê –®–ê–ë–õ–û–ù–ê –°–û–û–ë–©–ï–ù–ò–ô</b>\n\n"
            "üîç <b>–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:</b>\n"
            "<code>/set_template [–Ω–æ–≤—ã–π —à–∞–±–ª–æ–Ω]</code>\n\n"
            f"üìã <b>–¢–µ–∫—É—â–∏–π —à–∞–±–ª–æ–Ω:</b>\n"
            f"<code>{current_template}</code>\n\n"
            "üí° <b>–ü—Ä–∏–º–µ—Ä—ã —à–∞–±–ª–æ–Ω–æ–≤:</b>\n"
            "‚Ä¢ <code>/set_template üì¢ –û—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: {message}</code>\n"
            "‚Ä¢ <code>/set_template üéØ –í–∞–∂–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:\\n\\n{message}</code>\n"
            "‚Ä¢ <code>/set_template {message}</code> (–±–µ–∑ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è)\n"
            "‚Ä¢ <code>/set_template üíå <b>–õ–∏—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:</b>\\n{message}</code>\n\n"
            "üîë <b>–í–∞–∂–Ω–æ:</b>\n"
            "‚Ä¢ –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ <code>{message}</code> - —Å—é–¥–∞ –ø–æ–¥—Å—Ç–∞–≤–∏—Ç—Å—è —Ç–µ–∫—Å—Ç\n"
            "‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è HTML —Ä–∞–∑–º–µ—Ç–∫–∞ (<b>, <i>, <code>)\n"
            "‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ \\n –¥–ª—è –ø–µ—Ä–µ–Ω–æ—Å–∞ —Å—Ç—Ä–æ–∫–∏\n\n"
            "üëÄ <b>–ü—Ä–æ—Å–º–æ—Ç—Ä:</b> /get_template"
        )
        return
    
    # –ü–æ–ª—É—á–∞–µ–º –Ω–æ–≤—ã–π —à–∞–±–ª–æ–Ω
    new_template = " ".join(context.args)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä–∞ {message}
    if '{message}' not in new_template:
        await update.message.reply_html(
            "‚ùå <b>–û–®–ò–ë–ö–ê –®–ê–ë–õ–û–ù–ê!</b>\n\n"
            f"–®–∞–±–ª–æ–Ω –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å <code>{{message}}</code> - –º–µ—Å—Ç–æ –¥–ª—è –≤—Å—Ç–∞–≤–∫–∏ —Ç–µ–∫—Å—Ç–∞.\n\n"
            f"üö´ <b>–í–∞—à —à–∞–±–ª–æ–Ω:</b>\n"
            f"<code>{new_template}</code>\n\n"
            f"‚úÖ <b>–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç:</b>\n"
            f"<code>{new_template} {{message}}</code>\n\n"
            f"üí° <b>–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º —à–∞–±–ª–æ–Ω–æ–º.</b>"
        )
        return
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Ç–∞—Ä—ã–π —à–∞–±–ª–æ–Ω –¥–ª—è –æ—Ç—á–µ—Ç–∞
    old_template = bot_settings.get('message_template', '–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤—ã–π —à–∞–±–ª–æ–Ω
    bot_settings['message_template'] = new_template
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    save_bot_settings()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —à–∞–±–ª–æ–Ω
    test_message = "–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"
    test_result = new_template.format(message=test_message)
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç—á–µ—Ç
    result_text = (
        f"‚úÖ <b>–®–ê–ë–õ–û–ù –û–ë–ù–û–í–õ–ï–ù!</b>\n\n"
        f"üîÑ <b>–ò–∑–º–µ–Ω–µ–Ω–∏—è:</b>\n"
        f"‚Ä¢ –°—Ç–∞—Ä—ã–π: <code>{old_template}</code>\n"
        f"‚Ä¢ –ù–æ–≤—ã–π: <code>{new_template}</code>\n\n"
        f"üß™ <b>–¢–µ—Å—Ç–æ–≤—ã–π –ø—Ä–∏–º–µ—Ä:</b>\n"
        f"{test_result}\n\n"
        f"üí° <b>–ü—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è –∫:</b>\n"
        f"‚Ä¢ /broadcast - –º–∞—Å—Å–æ–≤–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞\n"
        f"‚Ä¢ /send_message - –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è\n\n"
        f"üìù <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤:</b> {BOT_SETTINGS_FILE}\n\n"
        f"üîß <b>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞–º–∏:</b>\n"
        f"/get_template - –ø—Ä–æ—Å–º–æ—Ç—Ä —Ç–µ–∫—É—â–µ–≥–æ —à–∞–±–ª–æ–Ω–∞\n"
        f"/set_template [—à–∞–±–ª–æ–Ω] - –∏–∑–º–µ–Ω–∏—Ç—å"
    )
    
    await update.message.reply_html(result_text)
    
    # –õ–æ–≥–∏—Ä—É–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏–µ
    logger.info(f"‚öôÔ∏è –ê–¥–º–∏–Ω {user_id} –∏–∑–º–µ–Ω–∏–ª —à–∞–±–ª–æ–Ω —Å–æ–æ–±—â–µ–Ω–∏–π")

async def get_template_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–ü—Ä–æ—Å–º–æ—Ç—Ä —Ç–µ–∫—É—â–µ–≥–æ —à–∞–±–ª–æ–Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–π (—Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω)"""
    user_id = update.effective_user.id
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    if user_id != ADMIN_USER_ID:
        await update.message.reply_text("‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω! –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É.")
        return
    
    current_template = bot_settings.get('message_template', '–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —à–∞–±–ª–æ–Ω —Å –ø—Ä–∏–º–µ—Ä–æ–º
    test_examples = [
        "–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ –¥–µ–ª–∞?",
        "üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è—é —Å –ø—Ä–∞–∑–¥–Ω–∏–∫–æ–º!",
        "–¢–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ —Å 15:00 –¥–æ 16:00"
    ]
    
    info_text = (
        f"üìã <b>–¢–ï–ö–£–©–ò–ô –®–ê–ë–õ–û–ù –°–û–û–ë–©–ï–ù–ò–ô</b>\n\n"
        f"‚öôÔ∏è <b>–®–∞–±–ª–æ–Ω:</b>\n"
        f"<code>{current_template}</code>\n\n"
        f"üß™ <b>–ü—Ä–∏–º–µ—Ä—ã —Å —ç—Ç–∏–º —à–∞–±–ª–æ–Ω–æ–º:</b>\n"
    )
    
    for i, example in enumerate(test_examples, 1):
        try:
            formatted = current_template.format(message=example)
            info_text += f"\n{i}. <b>–ò—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç:</b> {example}\n"
            info_text += f"   <b>–†–µ–∑—É–ª—å—Ç–∞—Ç:</b>\n{formatted}\n"
        except Exception as e:
            info_text += f"\n{i}. ‚ùå –û—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}\n"
    
    info_text += (
        f"\nüíæ <b>–°—Ç–∞—Ç—É—Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è:</b>\n"
        f"‚Ä¢ –§–∞–π–ª –Ω–∞—Å—Ç—Ä–æ–µ–∫: {BOT_SETTINGS_FILE}\n"
        f"‚Ä¢ –ê–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ: –≤–∫–ª—é—á–µ–Ω–æ\n"
        f"‚Ä¢ –ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ: –¥–∞\n\n"
        f"üîß <b>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:</b>\n"
        f"/set_template [–Ω–æ–≤—ã–π —à–∞–±–ª–æ–Ω] - –∏–∑–º–µ–Ω–∏—Ç—å\n"
        f"/send_message [ID] [—Ç–µ–∫—Å—Ç] - –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å\n"
        f"/broadcast [—Ç–µ–∫—Å—Ç] - –º–∞—Å—Å–æ–≤–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞"
    )
    
    await update.message.reply_html(info_text)

async def stocks_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–ö–æ–º–∞–Ω–¥–∞ /stocks - —Ç–æ–ø 10 —Ä–æ—Å—Å–∏–π—Å–∫–∏—Ö –∞–∫—Ü–∏–π"""
    user_id = update.effective_user.id
    user = update.effective_user
    
    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º/–æ–±–Ω–æ–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if user_id not in user_data:
        user_data[user_id] = {
            'name': user.first_name,
            'username': user.username,
            'first_seen': datetime.now().isoformat(),
            'last_activity': datetime.now().isoformat()
        }
        save_user_data()
    else:
        user_data[user_id]['last_activity'] = datetime.now().isoformat()
        save_user_data()
    
    loading_msg = await update.message.reply_html("üìà <b>–ó–∞–≥—Ä—É–∂–∞—é –¥–∞–Ω–Ω—ã–µ —Ä–æ—Å—Å–∏–π—Å–∫–∏—Ö –∞–∫—Ü–∏–π...</b>")
    
    try:
        # API –ú–æ—Å–∫–æ–≤—Å–∫–æ–π –±–∏—Ä–∂–∏ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∞–∫—Ü–∏–π
        moex_url = "https://iss.moex.com/iss/engines/stock/markets/shares/boards/TQBR/securities.json"
        
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å –ú–æ—Å–∫–æ–≤—Å–∫–æ–π –±–∏—Ä–∂–∏
        async with aiohttp.ClientSession() as session:
            async with session.get(moex_url) as response:
                if response.status != 200:
                    raise Exception(f"–û—à–∏–±–∫–∞ API MOEX: {response.status}")
                
                data = await response.json()
                
                # –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ–± –∞–∫—Ü–∏—è—Ö
                securities = data['securities']['data']
                marketdata = data['marketdata']['data']
                
                # –°–æ–∑–¥–∞–µ–º —Å–ª–æ–≤–∞—Ä—å –¥–ª—è –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
                stocks_info = {}
                
                # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–∫—Ü–∏—è—Ö
                security_columns = data['securities']['columns']
                for stock in securities:
                    stock_dict = dict(zip(security_columns, stock))
                    secid = stock_dict.get('SECID')
                    if secid:
                        stocks_info[secid] = {
                            'secid': secid,
                            'shortname': stock_dict.get('SHORTNAME', '–ù–µ —É–∫–∞–∑–∞–Ω–æ'),
                            'regnumber': stock_dict.get('REGNUMBER', ''),
                            'lotsize': stock_dict.get('LOTSIZE', 1),
                            'facevalue': stock_dict.get('FACEVALUE', 0)
                        }
                
                # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ä—ã–Ω–æ—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
                marketdata_columns = data['marketdata']['columns']
                for market in marketdata:
                    market_dict = dict(zip(marketdata_columns, market))
                    secid = market_dict.get('SECID')
                    if secid and secid in stocks_info:
                        stocks_info[secid].update({
                            'last': market_dict.get('LAST', 0),
                            'change': market_dict.get('CHANGE', 0),
                            'changeprcnt': market_dict.get('CHANGEPRCNT', 0),
                            'voltoday': market_dict.get('VOLTODAY', 0),
                            'valtoday': market_dict.get('VALTODAY', 0),
                            'marketcap': market_dict.get('MARKETCAP', 0),
                            'time': market_dict.get('TIME', ''),
                            'updatetime': market_dict.get('UPDATETIME', '')
                        })
                
                # –§–∏–ª—å—Ç—Ä—É–µ–º –∞–∫—Ü–∏–∏ —Å —Ä—ã–Ω–æ—á–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ –∏ —Å–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –∫–∞–ø–∏—Ç–∞–ª–∏–∑–∞—Ü–∏–∏
                active_stocks = []
                for secid, info in stocks_info.items():
                    if (info.get('last', 0) and info.get('last') > 0 and 
                        info.get('marketcap', 0) and info.get('marketcap') > 0):
                        active_stocks.append(info)
                
                # –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ —Ä—ã–Ω–æ—á–Ω–æ–π –∫–∞–ø–∏—Ç–∞–ª–∏–∑–∞—Ü–∏–∏ (–ø–æ —É–±—ã–≤–∞–Ω–∏—é)
                active_stocks.sort(key=lambda x: x.get('marketcap', 0), reverse=True)
                
                # –ë–µ—Ä–µ–º —Ç–æ–ø 10
                top_stocks = active_stocks[:10]
                
                if not top_stocks:
                    raise Exception("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ–± –∞–∫—Ü–∏—è—Ö")
                
                # –§–æ—Ä–º–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
                result_text = "üìà <b>–¢–û–ü-10 –†–û–°–°–ò–ô–°–ö–ò–• –ê–ö–¶–ò–ô</b>\n"
                result_text += f"üèõÔ∏è <b>–ú–æ—Å–∫–æ–≤—Å–∫–∞—è –±–∏—Ä–∂–∞ (MOEX)</b>\n\n"
                
                for i, stock in enumerate(top_stocks, 1):
                    name = stock.get('shortname', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')
                    price = stock.get('last', 0)
                    change = stock.get('change', 0)
                    change_pct = stock.get('changeprcnt', 0)
                    marketcap = stock.get('marketcap', 0)
                    
                    # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ (–æ–±—Ä–µ–∑–∞–µ–º –µ—Å–ª–∏ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ)
                    if len(name) > 25:
                        name = name[:22] + "..."
                    
                    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —ç–º–æ–¥–∑–∏ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è
                    if change > 0:
                        change_emoji = "üìà"
                        change_color = "üü¢"
                    elif change < 0:
                        change_emoji = "üìâ"
                        change_color = "üî¥"
                    else:
                        change_emoji = "‚û°Ô∏è"
                        change_color = "‚ö™"
                    
                    # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –∫–∞–ø–∏—Ç–∞–ª–∏–∑–∞—Ü–∏—é
                    if marketcap >= 1_000_000_000_000:  # —Ç—Ä–∏–ª–ª–∏–æ–Ω—ã
                        cap_formatted = f"{marketcap/1_000_000_000_000:.1f} —Ç—Ä–ª–Ω ‚ÇΩ"
                    elif marketcap >= 1_000_000_000:  # –º–∏–ª–ª–∏–∞—Ä–¥—ã
                        cap_formatted = f"{marketcap/1_000_000_000:.1f} –º–ª—Ä–¥ ‚ÇΩ"
                    elif marketcap >= 1_000_000:  # –º–∏–ª–ª–∏–æ–Ω—ã
                        cap_formatted = f"{marketcap/1_000_000:.1f} –º–ª–Ω ‚ÇΩ"
                    else:
                        cap_formatted = f"{marketcap:.0f} ‚ÇΩ"
                    
                    result_text += f"{i}. <b>{name}</b> ({stock.get('secid', '')})\n"
                    result_text += f"   üí∞ <b>{price:.2f} ‚ÇΩ</b>\n"
                    result_text += f"   {change_color} {change:+.2f} ‚ÇΩ ({change_pct:+.2f}%) {change_emoji}\n"
                    result_text += f"   üè¢ –ö–∞–ø–∏—Ç–∞–ª–∏–∑–∞—Ü–∏—è: {cap_formatted}\n\n"
                
                # –î–æ–±–∞–≤–ª—è–µ–º –≤—Ä–µ–º—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
                current_time = datetime.now().strftime('%d.%m.%Y %H:%M')
                result_text += f"üìä <b>–°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞:</b> –ü–æ —Ä—ã–Ω–æ—á–Ω–æ–π –∫–∞–ø–∏—Ç–∞–ª–∏–∑–∞—Ü–∏–∏\n"
                result_text += f"‚è∞ <b>–û–±–Ω–æ–≤–ª–µ–Ω–æ:</b> {current_time} (–ú–°–ö)\n"
                result_text += f"üì° <b>–ò—Å—Ç–æ—á–Ω–∏–∫:</b> –ú–æ—Å–∫–æ–≤—Å–∫–∞—è –±–∏—Ä–∂–∞ (MOEX)\n\n"
                result_text += f"üí° <b>–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ:</b>\n"
                result_text += f"‚Ä¢ –¶–µ–Ω—ã –≤ —Ä–æ—Å—Å–∏–π—Å–∫–∏—Ö —Ä—É–±–ª—è—Ö\n"
                result_text += f"‚Ä¢ –î–∞–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª—è—é—Ç—Å—è –≤ —Ä–µ–∂–∏–º–µ —Ä–µ–∞–ª—å–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏\n"
                result_text += f"‚Ä¢ üü¢ —Ä–æ—Å—Ç, üî¥ –ø–∞–¥–µ–Ω–∏–µ —Ü–µ–Ω—ã –∑–∞ –¥–µ–Ω—å"
                
                await loading_msg.edit_text(result_text, parse_mode='HTML')
                
    except Exception as e:
        error_text = (
            f"‚ùå <b>–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ–± –∞–∫—Ü–∏—è—Ö</b>\n\n"
            f"üö´ <b>–ü—Ä–∏—á–∏–Ω–∞:</b> {str(e)}\n\n"
            f"üí° <b>–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:</b>\n"
            f"‚Ä¢ –ü—Ä–æ–±–ª–µ–º—ã —Å API –ú–æ—Å–∫–æ–≤—Å–∫–æ–π –±–∏—Ä–∂–∏\n"
            f"‚Ä¢ –í—Ä–µ–º–µ–Ω–Ω—ã–µ –Ω–µ–ø–æ–ª–∞–¥–∫–∏ —Å–µ—Ç–∏\n"
            f"‚Ä¢ –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ä–∞–±–æ—Ç—ã –Ω–∞ –±–∏—Ä–∂–µ\n\n"
            f"üîÑ <b>–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:</b>\n"
            f"/rates - –∫—É—Ä—Å—ã –≤–∞–ª—é—Ç –∏ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç\n"
            f"/stocks - —Ä–æ—Å—Å–∏–π—Å–∫–∏–µ –∞–∫—Ü–∏–∏"
        )
        
        await loading_msg.edit_text(error_text, parse_mode='HTML')
        logger.error(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∞–∫—Ü–∏–π: {e}")

def main() -> None:
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ - –º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è"""
    logger.info("üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...")
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
    load_user_data()
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
    load_bot_settings()
    
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    application = Application.builder().token(BOT_TOKEN).build()

    # –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("help", help_command))
    application.add_handler(CommandHandler("ping", ping_command))
    application.add_handler(CommandHandler("my_id", my_id_command))
    application.add_handler(CommandHandler("admin", admin_command))
    application.add_handler(CommandHandler("rates", rates_command))
    application.add_handler(CommandHandler("broadcast", broadcast_command))
    application.add_handler(CommandHandler("fix_admin_id", fix_admin_id_command))
    application.add_handler(CommandHandler("users_info", users_info_command))
    application.add_handler(CommandHandler("add_user", add_user_command))
    application.add_handler(CommandHandler("remove_user", remove_user_command))
    application.add_handler(CommandHandler("send_message", send_message_command))
    application.add_handler(CommandHandler("set_template", set_template_command))
    application.add_handler(CommandHandler("get_template", get_template_command))
    application.add_handler(CommandHandler("stocks", stocks_command))

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Å–µ—Ö —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (—ç—Ö–æ)
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, echo))

    # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
    logger.info("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ")
    application.run_polling(allowed_updates=Update.ALL_TYPES)

if __name__ == '__main__':
    main() 